[0.065s] Invoking command in '/home/joannerizkallah/assignment3/build/dummy_node2': CMAKE_PREFIX_PATH=/home/joannerizkallah/assignment3/install/interfaces:/home/joannerizkallah/assignment3/install/dummy_node2:/home/joannerizkallah/assignment3/install/dummy_node1:/opt/ros/humble LD_LIBRARY_PATH=/home/joannerizkallah/assignment3/install/interfaces/lib:/home/joannerizkallah/assignment3/install/dummy_node2/lib:/home/joannerizkallah/assignment3/install/dummy_node1/lib:/opt/ros/humble/opt/rviz_ogre_vendor/lib:/opt/ros/humble/lib/x86_64-linux-gnu:/opt/ros/humble/lib /usr/bin/cmake --build /home/joannerizkallah/assignment3/build/dummy_node2 -- -j4 -l4
[0.215s] [35m[1mConsolidate compiler generated dependencies of target action_client[0m
[0.269s] [ 16%] [32mBuilding CXX object CMakeFiles/action_client.dir/src/dummy_cpp_node.cpp.o[0m
[0.296s] [ 50%] Built target dummy_client
[0.296s] [ 83%] Built target dummy_cpp_node
[4.756s] [01m[K/home/joannerizkallah/assignment3/src/dummy_node2/src/dummy_cpp_node.cpp:[m[K In member function â€˜[01m[Kvoid action_cpp::CustomActionClient::send_goal()[m[Kâ€™:
[4.756s] [01m[K/home/joannerizkallah/assignment3/src/dummy_node2/src/dummy_cpp_node.cpp:52:33:[m[K [01;31m[Kerror: [m[Kno matching function for call to â€˜[01m[Knlohmann::json_abi_v3_11_2::basic_json<>::value(const char [16]) const[m[Kâ€™
[4.757s]    52 |         double v = [01;31m[Kcommand.value("linear_velocity")[m[K;
[4.757s]       |                    [01;31m[K~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~[m[K
[4.757s] In file included from [01m[K/home/joannerizkallah/assignment3/src/dummy_node2/src/dummy_cpp_node.cpp:8[m[K:
[4.757s] [01m[K/home/joannerizkallah/assignment3/build/dummy_node2/_deps/json-src/include/nlohmann/json.hpp:2214:15:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class ValueType, typename std::enable_if<(((! nlohmann::json_abi_v3_11_2::detail::is_transparent<std::less<void> >::value) && nlohmann::json_abi_v3_11_2::detail::is_getable<nlohmann::json_abi_v3_11_2::basic_json<>, ValueType>::value) && (! std::is_same<nlohmann::json_abi_v3_11_2::detail::value_t, typename std::remove_cv<typename std::remove_reference<_Tp>::type>::type>::value)), int>::type <anonymous> > ValueType nlohmann::json_abi_v3_11_2::basic_json<ObjectType, ArrayType, StringType, BooleanType, NumberIntegerType, NumberUnsignedType, NumberFloatType, AllocatorType, JSONSerializer, BinaryType>::value(const typename nlohmann::json_abi_v3_11_2::basic_json<ObjectType, ArrayType, StringType, BooleanType, NumberIntegerType, NumberUnsignedType, NumberFloatType, AllocatorType, JSONSerializer, BinaryType>::object_t::key_type&, const ValueType&) const [with ValueType = ValueType; typename std::enable_if<(((! nlohmann::json_abi_v3_11_2::detail::is_transparent<typename nlohmann::json_abi_v3_11_2::detail::actual_object_comparator<nlohmann::json_abi_v3_11_2::basic_json<ObjectType, ArrayType, StringType, BooleanType, NumberIntegerType, NumberUnsignedType, NumberFloatType, AllocatorType, JSONSerializer, BinaryType> >::type>::value) && nlohmann::json_abi_v3_11_2::detail::is_getable<nlohmann::json_abi_v3_11_2::basic_json<ObjectType, ArrayType, StringType, BooleanType, NumberIntegerType, NumberUnsignedType, NumberFloatType, AllocatorType, JSONSerializer, BinaryType>, ValueType>::value) && (! std::is_same<nlohmann::json_abi_v3_11_2::detail::value_t, typename std::remove_cv<typename std::remove_reference<_Tuple>::type>::type>::value)), int>::type <anonymous> = <anonymous>; ObjectType = std::map; ArrayType = std::vector; StringType = std::__cxx11::basic_string<char>; BooleanType = bool; NumberIntegerType = long int; NumberUnsignedType = long unsigned int; NumberFloatType = double; AllocatorType = std::allocator; JSONSerializer = nlohmann::json_abi_v3_11_2::adl_serializer; BinaryType = std::vector<unsigned char>][m[Kâ€™
[4.757s]  2214 |     ValueType [01;36m[Kvalue[m[K(const typename object_t::key_type& key, const ValueType& default_value) const
[4.758s]       |               [01;36m[K^~~~~[m[K
[4.758s] [01m[K/home/joannerizkallah/assignment3/build/dummy_node2/_deps/json-src/include/nlohmann/json.hpp:2214:15:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[4.758s] [01m[K/home/joannerizkallah/assignment3/src/dummy_node2/src/dummy_cpp_node.cpp:52:33:[m[K [01;36m[Knote: [m[K  candidate expects 2 arguments, 1 provided
[4.758s]    52 |         double v = [01;36m[Kcommand.value("linear_velocity")[m[K;
[4.759s]       |                    [01;36m[K~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~[m[K
[4.759s] In file included from [01m[K/home/joannerizkallah/assignment3/src/dummy_node2/src/dummy_cpp_node.cpp:8[m[K:
[4.759s] [01m[K/home/joannerizkallah/assignment3/build/dummy_node2/_deps/json-src/include/nlohmann/json.hpp:2239:16:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class ValueType, class ReturnType, typename std::enable_if<(((! nlohmann::json_abi_v3_11_2::detail::is_transparent<std::less<void> >::value) && nlohmann::json_abi_v3_11_2::detail::is_getable<nlohmann::json_abi_v3_11_2::basic_json<>, ReturnType>::value) && (! std::is_same<nlohmann::json_abi_v3_11_2::detail::value_t, typename std::remove_cv<typename std::remove_reference<_Tp>::type>::type>::value)), int>::type <anonymous> > ReturnType nlohmann::json_abi_v3_11_2::basic_json<ObjectType, ArrayType, StringType, BooleanType, NumberIntegerType, NumberUnsignedType, NumberFloatType, AllocatorType, JSONSerializer, BinaryType>::value(const typename nlohmann::json_abi_v3_11_2::basic_json<ObjectType, ArrayType, StringType, BooleanType, NumberIntegerType, NumberUnsignedType, NumberFloatType, AllocatorType, JSONSerializer, BinaryType>::object_t::key_type&, ValueType&&) const [with ValueType = ValueType; ReturnType = ReturnType; typename std::enable_if<(((! nlohmann::json_abi_v3_11_2::detail::is_transparent<typename nlohmann::json_abi_v3_11_2::detail::actual_object_comparator<nlohmann::json_abi_v3_11_2::basic_json<ObjectType, ArrayType, StringType, BooleanType, NumberIntegerType, NumberUnsignedType, NumberFloatType, AllocatorType, JSONSerializer, BinaryType> >::type>::value) && nlohmann::json_abi_v3_11_2::detail::is_getable<nlohmann::json_abi_v3_11_2::basic_json<ObjectType, ArrayType, StringType, BooleanType, NumberIntegerType, NumberUnsignedType, NumberFloatType, AllocatorType, JSONSerializer, BinaryType>, ReturnType>::value) && (! std::is_same<nlohmann::json_abi_v3_11_2::detail::value_t, typename std::remove_cv<typename std::remove_reference<_Tuple>::type>::type>::value)), int>::type <anonymous> = <anonymous>; ObjectType = std::map; ArrayType = std::vector; StringType = std::__cxx11::basic_string<char>; BooleanType = bool; NumberIntegerType = long int; NumberUnsignedType = long unsigned int; NumberFloatType = double; AllocatorType = std::allocator; JSONSerializer = nlohmann::json_abi_v3_11_2::adl_serializer; BinaryType = std::vector<unsigned char>][m[Kâ€™
[4.759s]  2239 |     ReturnType [01;36m[Kvalue[m[K(const typename object_t::key_type& key, ValueType && default_value) const
[4.759s]       |                [01;36m[K^~~~~[m[K
[4.759s] [01m[K/home/joannerizkallah/assignment3/build/dummy_node2/_deps/json-src/include/nlohmann/json.hpp:2239:16:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[4.760s] [01m[K/home/joannerizkallah/assignment3/src/dummy_node2/src/dummy_cpp_node.cpp:52:33:[m[K [01;36m[Knote: [m[K  candidate expects 2 arguments, 1 provided
[4.760s]    52 |         double v = [01;36m[Kcommand.value("linear_velocity")[m[K;
[4.760s]       |                    [01;36m[K~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~[m[K
[4.760s] In file included from [01m[K/home/joannerizkallah/assignment3/src/dummy_node2/src/dummy_cpp_node.cpp:8[m[K:
[4.760s] [01m[K/home/joannerizkallah/assignment3/build/dummy_node2/_deps/json-src/include/nlohmann/json.hpp:2265:15:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class ValueType, class KeyType, typename std::enable_if<((((nlohmann::json_abi_v3_11_2::detail::is_transparent<std::less<void> >::value && (! nlohmann::json_abi_v3_11_2::detail::is_specialization_of<nlohmann::json_abi_v3_11_2::json_pointer, typename std::remove_cv<typename std::remove_reference<_Arg>::type>::type>::value)) && nlohmann::json_abi_v3_11_2::detail::is_comparable<std::less<void>, const std::__cxx11::basic_string<char>&, KeyType, void>::value) && nlohmann::json_abi_v3_11_2::detail::is_getable<nlohmann::json_abi_v3_11_2::basic_json<>, ValueType>::value) && (! std::is_same<nlohmann::json_abi_v3_11_2::detail::value_t, typename std::remove_cv<typename std::remove_reference<_Tp>::type>::type>::value)), int>::type <anonymous> > ValueType nlohmann::json_abi_v3_11_2::basic_json<ObjectType, ArrayType, StringType, BooleanType, NumberIntegerType, NumberUnsignedType, NumberFloatType, AllocatorType, JSONSerializer, BinaryType>::value(KeyType&&, const ValueType&) const [with ValueType = ValueType; KeyType = KeyType; typename std::enable_if<((((nlohmann::json_abi_v3_11_2::detail::is_transparent<typename nlohmann::json_abi_v3_11_2::detail::actual_object_comparator<nlohmann::json_abi_v3_11_2::basic_json<ObjectType, ArrayType, StringType, BooleanType, NumberIntegerType, NumberUnsignedType, NumberFloatType, AllocatorType, JSONSerializer, BinaryType> >::type>::value && (! nlohmann::json_abi_v3_11_2::detail::is_specialization_of<nlohmann::json_abi_v3_11_2::json_pointer, typename std::remove_cv<typename std::remove_reference<_Ep>::type>::type>::value)) && nlohmann::json_abi_v3_11_2::detail::is_comparable<typename nlohmann::json_abi_v3_11_2::detail::actual_object_comparator<nlohmann::json_abi_v3_11_2::basic_json<ObjectType, ArrayType, StringType, BooleanType, NumberIntegerType, NumberUnsignedType, NumberFloatType, AllocatorType, JSONSerializer, BinaryType> >::type, const typename ObjectType<StringType, nlohmann::json_abi_v3_11_2::basic_json<ObjectType, ArrayType, StringType, BooleanType, NumberIntegerType, NumberUnsignedType, NumberFloatType, AllocatorType, JSONSerializer, BinaryType>, std::less<void>, AllocatorType<std::pair<const StringType, nlohmann::json_abi_v3_11_2::basic_json<ObjectType, ArrayType, StringType, BooleanType, NumberIntegerType, NumberUnsignedType, NumberFloatType, AllocatorType, JSONSerializer, BinaryType> > > >::key_type&, KeyType, void>::value) && nlohmann::json_abi_v3_11_2::detail::is_getable<nlohmann::json_abi_v3_11_2::basic_json<ObjectType, ArrayType, StringType, BooleanType, NumberIntegerType, NumberUnsignedType, NumberFloatType, AllocatorType, JSONSerializer, BinaryType>, ValueType>::value) && (! std::is_same<nlohmann::json_abi_v3_11_2::detail::value_t, typename std::remove_cv<typename std::remove_reference<_Tuple>::type>::type>::value)), int>::type <anonymous> = <anonymous>; ObjectType = std::map; ArrayType = std::vector; StringType = std::__cxx11::basic_string<char>; BooleanType = bool; NumberIntegerType = long int; NumberUnsignedType = long unsigned int; NumberFloatType = double; AllocatorType = std::allocator; JSONSerializer = nlohmann::json_abi_v3_11_2::adl_serializer; BinaryType = std::vector<unsigned char>][m[Kâ€™
[4.761s]  2265 |     ValueType [01;36m[Kvalue[m[K(KeyType && key, const ValueType& default_value) const
[4.761s]       |               [01;36m[K^~~~~[m[K
[4.762s] [01m[K/home/joannerizkallah/assignment3/build/dummy_node2/_deps/json-src/include/nlohmann/json.hpp:2265:15:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[4.762s] [01m[K/home/joannerizkallah/assignment3/src/dummy_node2/src/dummy_cpp_node.cpp:52:33:[m[K [01;36m[Knote: [m[K  candidate expects 2 arguments, 1 provided
[4.762s]    52 |         double v = [01;36m[Kcommand.value("linear_velocity")[m[K;
[4.762s]       |                    [01;36m[K~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~[m[K
[4.762s] In file included from [01m[K/home/joannerizkallah/assignment3/src/dummy_node2/src/dummy_cpp_node.cpp:8[m[K:
[4.762s] [01m[K/home/joannerizkallah/assignment3/build/dummy_node2/_deps/json-src/include/nlohmann/json.hpp:2292:16:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class ValueType, class KeyType, class ReturnType, typename std::enable_if<((((nlohmann::json_abi_v3_11_2::detail::is_transparent<std::less<void> >::value && (! nlohmann::json_abi_v3_11_2::detail::is_specialization_of<nlohmann::json_abi_v3_11_2::json_pointer, typename std::remove_cv<typename std::remove_reference<_Arg>::type>::type>::value)) && nlohmann::json_abi_v3_11_2::detail::is_comparable<std::less<void>, const std::__cxx11::basic_string<char>&, KeyType, void>::value) && nlohmann::json_abi_v3_11_2::detail::is_getable<nlohmann::json_abi_v3_11_2::basic_json<>, ReturnType>::value) && (! std::is_same<nlohmann::json_abi_v3_11_2::detail::value_t, typename std::remove_cv<typename std::remove_reference<_Tp>::type>::type>::value)), int>::type <anonymous> > ReturnType nlohmann::json_abi_v3_11_2::basic_json<ObjectType, ArrayType, StringType, BooleanType, NumberIntegerType, NumberUnsignedType, NumberFloatType, AllocatorType, JSONSerializer, BinaryType>::value(KeyType&&, ValueType&&) const [with ValueType = ValueType; KeyType = KeyType; ReturnType = ReturnType; typename std::enable_if<((((nlohmann::json_abi_v3_11_2::detail::is_transparent<typename nlohmann::json_abi_v3_11_2::detail::actual_object_comparator<nlohmann::json_abi_v3_11_2::basic_json<ObjectType, ArrayType, StringType, BooleanType, NumberIntegerType, NumberUnsignedType, NumberFloatType, AllocatorType, JSONSerializer, BinaryType> >::type>::value && (! nlohmann::json_abi_v3_11_2::detail::is_specialization_of<nlohmann::json_abi_v3_11_2::json_pointer, typename std::remove_cv<typename std::remove_reference<_Ep>::type>::type>::value)) && nlohmann::json_abi_v3_11_2::detail::is_comparable<typename nlohmann::json_abi_v3_11_2::detail::actual_object_comparator<nlohmann::json_abi_v3_11_2::basic_json<ObjectType, ArrayType, StringType, BooleanType, NumberIntegerType, NumberUnsignedType, NumberFloatType, AllocatorType, JSONSerializer, BinaryType> >::type, const typename ObjectType<StringType, nlohmann::json_abi_v3_11_2::basic_json<ObjectType, ArrayType, StringType, BooleanType, NumberIntegerType, NumberUnsignedType, NumberFloatType, AllocatorType, JSONSerializer, BinaryType>, std::less<void>, AllocatorType<std::pair<const StringType, nlohmann::json_abi_v3_11_2::basic_json<ObjectType, ArrayType, StringType, BooleanType, NumberIntegerType, NumberUnsignedType, NumberFloatType, AllocatorType, JSONSerializer, BinaryType> > > >::key_type&, KeyType, void>::value) && nlohmann::json_abi_v3_11_2::detail::is_getable<nlohmann::json_abi_v3_11_2::basic_json<ObjectType, ArrayType, StringType, BooleanType, NumberIntegerType, NumberUnsignedType, NumberFloatType, AllocatorType, JSONSerializer, BinaryType>, ReturnType>::value) && (! std::is_same<nlohmann::json_abi_v3_11_2::detail::value_t, typename std::remove_cv<typename std::remove_reference<_Tuple>::type>::type>::value)), int>::type <anonymous> = <anonymous>; ObjectType = std::map; ArrayType = std::vector; StringType = std::__cxx11::basic_string<char>; BooleanType = bool; NumberIntegerType = long int; NumberUnsignedType = long unsigned int; NumberFloatType = double; AllocatorType = std::allocator; JSONSerializer = nlohmann::json_abi_v3_11_2::adl_serializer; BinaryType = std::vector<unsigned char>][m[Kâ€™
[4.762s]  2292 |     ReturnType [01;36m[Kvalue[m[K(KeyType && key, ValueType && default_value) const
[4.762s]       |                [01;36m[K^~~~~[m[K
[4.763s] [01m[K/home/joannerizkallah/assignment3/build/dummy_node2/_deps/json-src/include/nlohmann/json.hpp:2292:16:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[4.763s] [01m[K/home/joannerizkallah/assignment3/src/dummy_node2/src/dummy_cpp_node.cpp:52:33:[m[K [01;36m[Knote: [m[K  candidate expects 2 arguments, 1 provided
[4.763s]    52 |         double v = [01;36m[Kcommand.value("linear_velocity")[m[K;
[4.763s]       |                    [01;36m[K~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~[m[K
[4.763s] In file included from [01m[K/home/joannerizkallah/assignment3/src/dummy_node2/src/dummy_cpp_node.cpp:8[m[K:
[4.763s] [01m[K/home/joannerizkallah/assignment3/build/dummy_node2/_deps/json-src/include/nlohmann/json.hpp:2315:15:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class ValueType, typename std::enable_if<(nlohmann::json_abi_v3_11_2::detail::is_getable<nlohmann::json_abi_v3_11_2::basic_json<>, ValueType>::value && (! std::is_same<nlohmann::json_abi_v3_11_2::detail::value_t, typename std::remove_cv<typename std::remove_reference<_Tp>::type>::type>::value)), int>::type <anonymous> > ValueType nlohmann::json_abi_v3_11_2::basic_json<ObjectType, ArrayType, StringType, BooleanType, NumberIntegerType, NumberUnsignedType, NumberFloatType, AllocatorType, JSONSerializer, BinaryType>::value(const json_pointer&, const ValueType&) const [with ValueType = ValueType; typename std::enable_if<(nlohmann::json_abi_v3_11_2::detail::is_getable<nlohmann::json_abi_v3_11_2::basic_json<ObjectType, ArrayType, StringType, BooleanType, NumberIntegerType, NumberUnsignedType, NumberFloatType, AllocatorType, JSONSerializer, BinaryType>, ValueType>::value && (! std::is_same<nlohmann::json_abi_v3_11_2::detail::value_t, typename std::remove_cv<typename std::remove_reference<_Tuple>::type>::type>::value)), int>::type <anonymous> = <anonymous>; ObjectType = std::map; ArrayType = std::vector; StringType = std::__cxx11::basic_string<char>; BooleanType = bool; NumberIntegerType = long int; NumberUnsignedType = long unsigned int; NumberFloatType = double; AllocatorType = std::allocator; JSONSerializer = nlohmann::json_abi_v3_11_2::adl_serializer; BinaryType = std::vector<unsigned char>][m[Kâ€™
[4.763s]  2315 |     ValueType [01;36m[Kvalue[m[K(const json_pointer& ptr, const ValueType& default_value) const
[4.763s]       |               [01;36m[K^~~~~[m[K
[4.763s] [01m[K/home/joannerizkallah/assignment3/build/dummy_node2/_deps/json-src/include/nlohmann/json.hpp:2315:15:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[4.763s] [01m[K/home/joannerizkallah/assignment3/src/dummy_node2/src/dummy_cpp_node.cpp:52:33:[m[K [01;36m[Knote: [m[K  candidate expects 2 arguments, 1 provided
[4.763s]    52 |         double v = [01;36m[Kcommand.value("linear_velocity")[m[K;
[4.763s]       |                    [01;36m[K~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~[m[K
[4.763s] In file included from [01m[K/home/joannerizkallah/assignment3/src/dummy_node2/src/dummy_cpp_node.cpp:8[m[K:
[4.763s] [01m[K/home/joannerizkallah/assignment3/build/dummy_node2/_deps/json-src/include/nlohmann/json.hpp:2340:16:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class ValueType, class ReturnType, typename std::enable_if<(nlohmann::json_abi_v3_11_2::detail::is_getable<nlohmann::json_abi_v3_11_2::basic_json<>, ReturnType>::value && (! std::is_same<nlohmann::json_abi_v3_11_2::detail::value_t, typename std::remove_cv<typename std::remove_reference<_Tp>::type>::type>::value)), int>::type <anonymous> > ReturnType nlohmann::json_abi_v3_11_2::basic_json<ObjectType, ArrayType, StringType, BooleanType, NumberIntegerType, NumberUnsignedType, NumberFloatType, AllocatorType, JSONSerializer, BinaryType>::value(const json_pointer&, ValueType&&) const [with ValueType = ValueType; ReturnType = ReturnType; typename std::enable_if<(nlohmann::json_abi_v3_11_2::detail::is_getable<nlohmann::json_abi_v3_11_2::basic_json<ObjectType, ArrayType, StringType, BooleanType, NumberIntegerType, NumberUnsignedType, NumberFloatType, AllocatorType, JSONSerializer, BinaryType>, ReturnType>::value && (! std::is_same<nlohmann::json_abi_v3_11_2::detail::value_t, typename std::remove_cv<typename std::remove_reference<_Tuple>::type>::type>::value)), int>::type <anonymous> = <anonymous>; ObjectType = std::map; ArrayType = std::vector; StringType = std::__cxx11::basic_string<char>; BooleanType = bool; NumberIntegerType = long int; NumberUnsignedType = long unsigned int; NumberFloatType = double; AllocatorType = std::allocator; JSONSerializer = nlohmann::json_abi_v3_11_2::adl_serializer; BinaryType = std::vector<unsigned char>][m[Kâ€™
[4.763s]  2340 |     ReturnType [01;36m[Kvalue[m[K(const json_pointer& ptr, ValueType && default_value) const
[4.764s]       |                [01;36m[K^~~~~[m[K
[4.764s] [01m[K/home/joannerizkallah/assignment3/build/dummy_node2/_deps/json-src/include/nlohmann/json.hpp:2340:16:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[4.764s] [01m[K/home/joannerizkallah/assignment3/src/dummy_node2/src/dummy_cpp_node.cpp:52:33:[m[K [01;36m[Knote: [m[K  candidate expects 2 arguments, 1 provided
[4.764s]    52 |         double v = [01;36m[Kcommand.value("linear_velocity")[m[K;
[4.764s]       |                    [01;36m[K~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~[m[K
[4.764s] In file included from [01m[K/home/joannerizkallah/assignment3/src/dummy_node2/src/dummy_cpp_node.cpp:8[m[K:
[4.764s] [01m[K/home/joannerizkallah/assignment3/build/dummy_node2/_deps/json-src/include/nlohmann/json.hpp:2364:15:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class ValueType, class BasicJsonType, typename std::enable_if<((nlohmann::json_abi_v3_11_2::detail::is_basic_json<T>::value && nlohmann::json_abi_v3_11_2::detail::is_getable<nlohmann::json_abi_v3_11_2::basic_json<>, ValueType>::value) && (! std::is_same<nlohmann::json_abi_v3_11_2::detail::value_t, typename std::remove_cv<typename std::remove_reference<_Tp>::type>::type>::value)), int>::type <anonymous> > ValueType nlohmann::json_abi_v3_11_2::basic_json<ObjectType, ArrayType, StringType, BooleanType, NumberIntegerType, NumberUnsignedType, NumberFloatType, AllocatorType, JSONSerializer, BinaryType>::value(const nlohmann::json_abi_v3_11_2::json_pointer<RefStringTypeRhs>&, const ValueType&) const [with ValueType = ValueType; BasicJsonType = BasicJsonType; typename std::enable_if<((nlohmann::json_abi_v3_11_2::detail::is_basic_json<U>::value && nlohmann::json_abi_v3_11_2::detail::is_getable<nlohmann::json_abi_v3_11_2::basic_json<ObjectType, ArrayType, StringType, BooleanType, NumberIntegerType, NumberUnsignedType, NumberFloatType, AllocatorType, JSONSerializer, BinaryType>, ValueType>::value) && (! std::is_same<nlohmann::json_abi_v3_11_2::detail::value_t, typename std::remove_cv<typename std::remove_reference<_Tuple>::type>::type>::value)), int>::type <anonymous> = <anonymous>; ObjectType = std::map; ArrayType = std::vector; StringType = std::__cxx11::basic_string<char>; BooleanType = bool; NumberIntegerType = long int; NumberUnsignedType = long unsigned int; NumberFloatType = double; AllocatorType = std::allocator; JSONSerializer = nlohmann::json_abi_v3_11_2::adl_serializer; BinaryType = std::vector<unsigned char>][m[Kâ€™
[4.764s]  2364 |     ValueType [01;36m[Kvalue[m[K(const ::nlohmann::json_pointer<BasicJsonType>& ptr, const ValueType& default_value) const
[4.764s]       |               [01;36m[K^~~~~[m[K
[4.764s] [01m[K/home/joannerizkallah/assignment3/build/dummy_node2/_deps/json-src/include/nlohmann/json.hpp:2364:15:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[4.764s] [01m[K/home/joannerizkallah/assignment3/src/dummy_node2/src/dummy_cpp_node.cpp:52:33:[m[K [01;36m[Knote: [m[K  mismatched types â€˜[01m[Kconst nlohmann::json_abi_v3_11_2::json_pointer<RefStringTypeRhs>[m[Kâ€™ and â€˜[01m[Kconst char [16][m[Kâ€™
[4.764s]    52 |         double v = [01;36m[Kcommand.value("linear_velocity")[m[K;
[4.765s]       |                    [01;36m[K~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~[m[K
[4.765s] In file included from [01m[K/home/joannerizkallah/assignment3/src/dummy_node2/src/dummy_cpp_node.cpp:8[m[K:
[4.765s] [01m[K/home/joannerizkallah/assignment3/build/dummy_node2/_deps/json-src/include/nlohmann/json.hpp:2375:16:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class ValueType, class BasicJsonType, class ReturnType, typename std::enable_if<((nlohmann::json_abi_v3_11_2::detail::is_basic_json<T>::value && nlohmann::json_abi_v3_11_2::detail::is_getable<nlohmann::json_abi_v3_11_2::basic_json<>, ReturnType>::value) && (! std::is_same<nlohmann::json_abi_v3_11_2::detail::value_t, typename std::remove_cv<typename std::remove_reference<_Tp>::type>::type>::value)), int>::type <anonymous> > ReturnType nlohmann::json_abi_v3_11_2::basic_json<ObjectType, ArrayType, StringType, BooleanType, NumberIntegerType, NumberUnsignedType, NumberFloatType, AllocatorType, JSONSerializer, BinaryType>::value(const nlohmann::json_abi_v3_11_2::json_pointer<RefStringTypeRhs>&, ValueType&&) const [with ValueType = ValueType; BasicJsonType = BasicJsonType; ReturnType = ReturnType; typename std::enable_if<((nlohmann::json_abi_v3_11_2::detail::is_basic_json<U>::value && nlohmann::json_abi_v3_11_2::detail::is_getable<nlohmann::json_abi_v3_11_2::basic_json<ObjectType, ArrayType, StringType, BooleanType, NumberIntegerType, NumberUnsignedType, NumberFloatType, AllocatorType, JSONSerializer, BinaryType>, ReturnType>::value) && (! std::is_same<nlohmann::json_abi_v3_11_2::detail::value_t, typename std::remove_cv<typename std::remove_reference<_Tuple>::type>::type>::value)), int>::type <anonymous> = <anonymous>; ObjectType = std::map; ArrayType = std::vector; StringType = std::__cxx11::basic_string<char>; BooleanType = bool; NumberIntegerType = long int; NumberUnsignedType = long unsigned int; NumberFloatType = double; AllocatorType = std::allocator; JSONSerializer = nlohmann::json_abi_v3_11_2::adl_serializer; BinaryType = std::vector<unsigned char>][m[Kâ€™
[4.765s]  2375 |     ReturnType [01;36m[Kvalue[m[K(const ::nlohmann::json_pointer<BasicJsonType>& ptr, ValueType && default_value) const
[4.765s]       |                [01;36m[K^~~~~[m[K
[4.765s] [01m[K/home/joannerizkallah/assignment3/build/dummy_node2/_deps/json-src/include/nlohmann/json.hpp:2375:16:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[4.765s] [01m[K/home/joannerizkallah/assignment3/src/dummy_node2/src/dummy_cpp_node.cpp:52:33:[m[K [01;36m[Knote: [m[K  mismatched types â€˜[01m[Kconst nlohmann::json_abi_v3_11_2::json_pointer<RefStringTypeRhs>[m[Kâ€™ and â€˜[01m[Kconst char [16][m[Kâ€™
[4.765s]    52 |         double v = [01;36m[Kcommand.value("linear_velocity")[m[K;
[4.765s]       |                    [01;36m[K~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~[m[K
[4.765s] [01m[K/home/joannerizkallah/assignment3/src/dummy_node2/src/dummy_cpp_node.cpp:53:33:[m[K [01;31m[Kerror: [m[Kno matching function for call to â€˜[01m[Knlohmann::json_abi_v3_11_2::basic_json<>::value(const char [9]) const[m[Kâ€™
[4.765s]    53 |         double d = [01;31m[Kcommand.value("distance")[m[K;
[4.765s]       |                    [01;31m[K~~~~~~~~~~~~~^~~~~~~~~~~~[m[K
[4.765s] In file included from [01m[K/home/joannerizkallah/assignment3/src/dummy_node2/src/dummy_cpp_node.cpp:8[m[K:
[4.765s] [01m[K/home/joannerizkallah/assignment3/build/dummy_node2/_deps/json-src/include/nlohmann/json.hpp:2214:15:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class ValueType, typename std::enable_if<(((! nlohmann::json_abi_v3_11_2::detail::is_transparent<std::less<void> >::value) && nlohmann::json_abi_v3_11_2::detail::is_getable<nlohmann::json_abi_v3_11_2::basic_json<>, ValueType>::value) && (! std::is_same<nlohmann::json_abi_v3_11_2::detail::value_t, typename std::remove_cv<typename std::remove_reference<_Tp>::type>::type>::value)), int>::type <anonymous> > ValueType nlohmann::json_abi_v3_11_2::basic_json<ObjectType, ArrayType, StringType, BooleanType, NumberIntegerType, NumberUnsignedType, NumberFloatType, AllocatorType, JSONSerializer, BinaryType>::value(const typename nlohmann::json_abi_v3_11_2::basic_json<ObjectType, ArrayType, StringType, BooleanType, NumberIntegerType, NumberUnsignedType, NumberFloatType, AllocatorType, JSONSerializer, BinaryType>::object_t::key_type&, const ValueType&) const [with ValueType = ValueType; typename std::enable_if<(((! nlohmann::json_abi_v3_11_2::detail::is_transparent<typename nlohmann::json_abi_v3_11_2::detail::actual_object_comparator<nlohmann::json_abi_v3_11_2::basic_json<ObjectType, ArrayType, StringType, BooleanType, NumberIntegerType, NumberUnsignedType, NumberFloatType, AllocatorType, JSONSerializer, BinaryType> >::type>::value) && nlohmann::json_abi_v3_11_2::detail::is_getable<nlohmann::json_abi_v3_11_2::basic_json<ObjectType, ArrayType, StringType, BooleanType, NumberIntegerType, NumberUnsignedType, NumberFloatType, AllocatorType, JSONSerializer, BinaryType>, ValueType>::value) && (! std::is_same<nlohmann::json_abi_v3_11_2::detail::value_t, typename std::remove_cv<typename std::remove_reference<_Tuple>::type>::type>::value)), int>::type <anonymous> = <anonymous>; ObjectType = std::map; ArrayType = std::vector; StringType = std::__cxx11::basic_string<char>; BooleanType = bool; NumberIntegerType = long int; NumberUnsignedType = long unsigned int; NumberFloatType = double; AllocatorType = std::allocator; JSONSerializer = nlohmann::json_abi_v3_11_2::adl_serializer; BinaryType = std::vector<unsigned char>][m[Kâ€™
[4.765s]  2214 |     ValueType [01;36m[Kvalue[m[K(const typename object_t::key_type& key, const ValueType& default_value) const
[4.765s]       |               [01;36m[K^~~~~[m[K
[4.766s] [01m[K/home/joannerizkallah/assignment3/build/dummy_node2/_deps/json-src/include/nlohmann/json.hpp:2214:15:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[4.766s] [01m[K/home/joannerizkallah/assignment3/src/dummy_node2/src/dummy_cpp_node.cpp:53:33:[m[K [01;36m[Knote: [m[K  candidate expects 2 arguments, 1 provided
[4.766s]    53 |         double d = [01;36m[Kcommand.value("distance")[m[K;
[4.766s]       |                    [01;36m[K~~~~~~~~~~~~~^~~~~~~~~~~~[m[K
[4.766s] In file included from [01m[K/home/joannerizkallah/assignment3/src/dummy_node2/src/dummy_cpp_node.cpp:8[m[K:
[4.766s] [01m[K/home/joannerizkallah/assignment3/build/dummy_node2/_deps/json-src/include/nlohmann/json.hpp:2239:16:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class ValueType, class ReturnType, typename std::enable_if<(((! nlohmann::json_abi_v3_11_2::detail::is_transparent<std::less<void> >::value) && nlohmann::json_abi_v3_11_2::detail::is_getable<nlohmann::json_abi_v3_11_2::basic_json<>, ReturnType>::value) && (! std::is_same<nlohmann::json_abi_v3_11_2::detail::value_t, typename std::remove_cv<typename std::remove_reference<_Tp>::type>::type>::value)), int>::type <anonymous> > ReturnType nlohmann::json_abi_v3_11_2::basic_json<ObjectType, ArrayType, StringType, BooleanType, NumberIntegerType, NumberUnsignedType, NumberFloatType, AllocatorType, JSONSerializer, BinaryType>::value(const typename nlohmann::json_abi_v3_11_2::basic_json<ObjectType, ArrayType, StringType, BooleanType, NumberIntegerType, NumberUnsignedType, NumberFloatType, AllocatorType, JSONSerializer, BinaryType>::object_t::key_type&, ValueType&&) const [with ValueType = ValueType; ReturnType = ReturnType; typename std::enable_if<(((! nlohmann::json_abi_v3_11_2::detail::is_transparent<typename nlohmann::json_abi_v3_11_2::detail::actual_object_comparator<nlohmann::json_abi_v3_11_2::basic_json<ObjectType, ArrayType, StringType, BooleanType, NumberIntegerType, NumberUnsignedType, NumberFloatType, AllocatorType, JSONSerializer, BinaryType> >::type>::value) && nlohmann::json_abi_v3_11_2::detail::is_getable<nlohmann::json_abi_v3_11_2::basic_json<ObjectType, ArrayType, StringType, BooleanType, NumberIntegerType, NumberUnsignedType, NumberFloatType, AllocatorType, JSONSerializer, BinaryType>, ReturnType>::value) && (! std::is_same<nlohmann::json_abi_v3_11_2::detail::value_t, typename std::remove_cv<typename std::remove_reference<_Tuple>::type>::type>::value)), int>::type <anonymous> = <anonymous>; ObjectType = std::map; ArrayType = std::vector; StringType = std::__cxx11::basic_string<char>; BooleanType = bool; NumberIntegerType = long int; NumberUnsignedType = long unsigned int; NumberFloatType = double; AllocatorType = std::allocator; JSONSerializer = nlohmann::json_abi_v3_11_2::adl_serializer; BinaryType = std::vector<unsigned char>][m[Kâ€™
[4.766s]  2239 |     ReturnType [01;36m[Kvalue[m[K(const typename object_t::key_type& key, ValueType && default_value) const
[4.766s]       |                [01;36m[K^~~~~[m[K
[4.766s] [01m[K/home/joannerizkallah/assignment3/build/dummy_node2/_deps/json-src/include/nlohmann/json.hpp:2239:16:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[4.766s] [01m[K/home/joannerizkallah/assignment3/src/dummy_node2/src/dummy_cpp_node.cpp:53:33:[m[K [01;36m[Knote: [m[K  candidate expects 2 arguments, 1 provided
[4.766s]    53 |         double d = [01;36m[Kcommand.value("distance")[m[K;
[4.766s]       |                    [01;36m[K~~~~~~~~~~~~~^~~~~~~~~~~~[m[K
[4.766s] In file included from [01m[K/home/joannerizkallah/assignment3/src/dummy_node2/src/dummy_cpp_node.cpp:8[m[K:
[4.766s] [01m[K/home/joannerizkallah/assignment3/build/dummy_node2/_deps/json-src/include/nlohmann/json.hpp:2265:15:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class ValueType, class KeyType, typename std::enable_if<((((nlohmann::json_abi_v3_11_2::detail::is_transparent<std::less<void> >::value && (! nlohmann::json_abi_v3_11_2::detail::is_specialization_of<nlohmann::json_abi_v3_11_2::json_pointer, typename std::remove_cv<typename std::remove_reference<_Arg>::type>::type>::value)) && nlohmann::json_abi_v3_11_2::detail::is_comparable<std::less<void>, const std::__cxx11::basic_string<char>&, KeyType, void>::value) && nlohmann::json_abi_v3_11_2::detail::is_getable<nlohmann::json_abi_v3_11_2::basic_json<>, ValueType>::value) && (! std::is_same<nlohmann::json_abi_v3_11_2::detail::value_t, typename std::remove_cv<typename std::remove_reference<_Tp>::type>::type>::value)), int>::type <anonymous> > ValueType nlohmann::json_abi_v3_11_2::basic_json<ObjectType, ArrayType, StringType, BooleanType, NumberIntegerType, NumberUnsignedType, NumberFloatType, AllocatorType, JSONSerializer, BinaryType>::value(KeyType&&, const ValueType&) const [with ValueType = ValueType; KeyType = KeyType; typename std::enable_if<((((nlohmann::json_abi_v3_11_2::detail::is_transparent<typename nlohmann::json_abi_v3_11_2::detail::actual_object_comparator<nlohmann::json_abi_v3_11_2::basic_json<ObjectType, ArrayType, StringType, BooleanType, NumberIntegerType, NumberUnsignedType, NumberFloatType, AllocatorType, JSONSerializer, BinaryType> >::type>::value && (! nlohmann::json_abi_v3_11_2::detail::is_specialization_of<nlohmann::json_abi_v3_11_2::json_pointer, typename std::remove_cv<typename std::remove_reference<_Ep>::type>::type>::value)) && nlohmann::json_abi_v3_11_2::detail::is_comparable<typename nlohmann::json_abi_v3_11_2::detail::actual_object_comparator<nlohmann::json_abi_v3_11_2::basic_json<ObjectType, ArrayType, StringType, BooleanType, NumberIntegerType, NumberUnsignedType, NumberFloatType, AllocatorType, JSONSerializer, BinaryType> >::type, const typename ObjectType<StringType, nlohmann::json_abi_v3_11_2::basic_json<ObjectType, ArrayType, StringType, BooleanType, NumberIntegerType, NumberUnsignedType, NumberFloatType, AllocatorType, JSONSerializer, BinaryType>, std::less<void>, AllocatorType<std::pair<const StringType, nlohmann::json_abi_v3_11_2::basic_json<ObjectType, ArrayType, StringType, BooleanType, NumberIntegerType, NumberUnsignedType, NumberFloatType, AllocatorType, JSONSerializer, BinaryType> > > >::key_type&, KeyType, void>::value) && nlohmann::json_abi_v3_11_2::detail::is_getable<nlohmann::json_abi_v3_11_2::basic_json<ObjectType, ArrayType, StringType, BooleanType, NumberIntegerType, NumberUnsignedType, NumberFloatType, AllocatorType, JSONSerializer, BinaryType>, ValueType>::value) && (! std::is_same<nlohmann::json_abi_v3_11_2::detail::value_t, typename std::remove_cv<typename std::remove_reference<_Tuple>::type>::type>::value)), int>::type <anonymous> = <anonymous>; ObjectType = std::map; ArrayType = std::vector; StringType = std::__cxx11::basic_string<char>; BooleanType = bool; NumberIntegerType = long int; NumberUnsignedType = long unsigned int; NumberFloatType = double; AllocatorType = std::allocator; JSONSerializer = nlohmann::json_abi_v3_11_2::adl_serializer; BinaryType = std::vector<unsigned char>][m[Kâ€™
[4.766s]  2265 |     ValueType [01;36m[Kvalue[m[K(KeyType && key, const ValueType& default_value) const
[4.767s]       |               [01;36m[K^~~~~[m[K
[4.767s] [01m[K/home/joannerizkallah/assignment3/build/dummy_node2/_deps/json-src/include/nlohmann/json.hpp:2265:15:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[4.767s] [01m[K/home/joannerizkallah/assignment3/src/dummy_node2/src/dummy_cpp_node.cpp:53:33:[m[K [01;36m[Knote: [m[K  candidate expects 2 arguments, 1 provided
[4.767s]    53 |         double d = [01;36m[Kcommand.value("distance")[m[K;
[4.767s]       |                    [01;36m[K~~~~~~~~~~~~~^~~~~~~~~~~~[m[K
[4.767s] In file included from [01m[K/home/joannerizkallah/assignment3/src/dummy_node2/src/dummy_cpp_node.cpp:8[m[K:
[4.767s] [01m[K/home/joannerizkallah/assignment3/build/dummy_node2/_deps/json-src/include/nlohmann/json.hpp:2292:16:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class ValueType, class KeyType, class ReturnType, typename std::enable_if<((((nlohmann::json_abi_v3_11_2::detail::is_transparent<std::less<void> >::value && (! nlohmann::json_abi_v3_11_2::detail::is_specialization_of<nlohmann::json_abi_v3_11_2::json_pointer, typename std::remove_cv<typename std::remove_reference<_Arg>::type>::type>::value)) && nlohmann::json_abi_v3_11_2::detail::is_comparable<std::less<void>, const std::__cxx11::basic_string<char>&, KeyType, void>::value) && nlohmann::json_abi_v3_11_2::detail::is_getable<nlohmann::json_abi_v3_11_2::basic_json<>, ReturnType>::value) && (! std::is_same<nlohmann::json_abi_v3_11_2::detail::value_t, typename std::remove_cv<typename std::remove_reference<_Tp>::type>::type>::value)), int>::type <anonymous> > ReturnType nlohmann::json_abi_v3_11_2::basic_json<ObjectType, ArrayType, StringType, BooleanType, NumberIntegerType, NumberUnsignedType, NumberFloatType, AllocatorType, JSONSerializer, BinaryType>::value(KeyType&&, ValueType&&) const [with ValueType = ValueType; KeyType = KeyType; ReturnType = ReturnType; typename std::enable_if<((((nlohmann::json_abi_v3_11_2::detail::is_transparent<typename nlohmann::json_abi_v3_11_2::detail::actual_object_comparator<nlohmann::json_abi_v3_11_2::basic_json<ObjectType, ArrayType, StringType, BooleanType, NumberIntegerType, NumberUnsignedType, NumberFloatType, AllocatorType, JSONSerializer, BinaryType> >::type>::value && (! nlohmann::json_abi_v3_11_2::detail::is_specialization_of<nlohmann::json_abi_v3_11_2::json_pointer, typename std::remove_cv<typename std::remove_reference<_Ep>::type>::type>::value)) && nlohmann::json_abi_v3_11_2::detail::is_comparable<typename nlohmann::json_abi_v3_11_2::detail::actual_object_comparator<nlohmann::json_abi_v3_11_2::basic_json<ObjectType, ArrayType, StringType, BooleanType, NumberIntegerType, NumberUnsignedType, NumberFloatType, AllocatorType, JSONSerializer, BinaryType> >::type, const typename ObjectType<StringType, nlohmann::json_abi_v3_11_2::basic_json<ObjectType, ArrayType, StringType, BooleanType, NumberIntegerType, NumberUnsignedType, NumberFloatType, AllocatorType, JSONSerializer, BinaryType>, std::less<void>, AllocatorType<std::pair<const StringType, nlohmann::json_abi_v3_11_2::basic_json<ObjectType, ArrayType, StringType, BooleanType, NumberIntegerType, NumberUnsignedType, NumberFloatType, AllocatorType, JSONSerializer, BinaryType> > > >::key_type&, KeyType, void>::value) && nlohmann::json_abi_v3_11_2::detail::is_getable<nlohmann::json_abi_v3_11_2::basic_json<ObjectType, ArrayType, StringType, BooleanType, NumberIntegerType, NumberUnsignedType, NumberFloatType, AllocatorType, JSONSerializer, BinaryType>, ReturnType>::value) && (! std::is_same<nlohmann::json_abi_v3_11_2::detail::value_t, typename std::remove_cv<typename std::remove_reference<_Tuple>::type>::type>::value)), int>::type <anonymous> = <anonymous>; ObjectType = std::map; ArrayType = std::vector; StringType = std::__cxx11::basic_string<char>; BooleanType = bool; NumberIntegerType = long int; NumberUnsignedType = long unsigned int; NumberFloatType = double; AllocatorType = std::allocator; JSONSerializer = nlohmann::json_abi_v3_11_2::adl_serializer; BinaryType = std::vector<unsigned char>][m[Kâ€™
[4.767s]  2292 |     ReturnType [01;36m[Kvalue[m[K(KeyType && key, ValueType && default_value) const
[4.767s]       |                [01;36m[K^~~~~[m[K
[4.767s] [01m[K/home/joannerizkallah/assignment3/build/dummy_node2/_deps/json-src/include/nlohmann/json.hpp:2292:16:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[4.767s] [01m[K/home/joannerizkallah/assignment3/src/dummy_node2/src/dummy_cpp_node.cpp:53:33:[m[K [01;36m[Knote: [m[K  candidate expects 2 arguments, 1 provided
[4.767s]    53 |         double d = [01;36m[Kcommand.value("distance")[m[K;
[4.767s]       |                    [01;36m[K~~~~~~~~~~~~~^~~~~~~~~~~~[m[K
[4.767s] In file included from [01m[K/home/joannerizkallah/assignment3/src/dummy_node2/src/dummy_cpp_node.cpp:8[m[K:
[4.768s] [01m[K/home/joannerizkallah/assignment3/build/dummy_node2/_deps/json-src/include/nlohmann/json.hpp:2315:15:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class ValueType, typename std::enable_if<(nlohmann::json_abi_v3_11_2::detail::is_getable<nlohmann::json_abi_v3_11_2::basic_json<>, ValueType>::value && (! std::is_same<nlohmann::json_abi_v3_11_2::detail::value_t, typename std::remove_cv<typename std::remove_reference<_Tp>::type>::type>::value)), int>::type <anonymous> > ValueType nlohmann::json_abi_v3_11_2::basic_json<ObjectType, ArrayType, StringType, BooleanType, NumberIntegerType, NumberUnsignedType, NumberFloatType, AllocatorType, JSONSerializer, BinaryType>::value(const json_pointer&, const ValueType&) const [with ValueType = ValueType; typename std::enable_if<(nlohmann::json_abi_v3_11_2::detail::is_getable<nlohmann::json_abi_v3_11_2::basic_json<ObjectType, ArrayType, StringType, BooleanType, NumberIntegerType, NumberUnsignedType, NumberFloatType, AllocatorType, JSONSerializer, BinaryType>, ValueType>::value && (! std::is_same<nlohmann::json_abi_v3_11_2::detail::value_t, typename std::remove_cv<typename std::remove_reference<_Tuple>::type>::type>::value)), int>::type <anonymous> = <anonymous>; ObjectType = std::map; ArrayType = std::vector; StringType = std::__cxx11::basic_string<char>; BooleanType = bool; NumberIntegerType = long int; NumberUnsignedType = long unsigned int; NumberFloatType = double; AllocatorType = std::allocator; JSONSerializer = nlohmann::json_abi_v3_11_2::adl_serializer; BinaryType = std::vector<unsigned char>][m[Kâ€™
[4.768s]  2315 |     ValueType [01;36m[Kvalue[m[K(const json_pointer& ptr, const ValueType& default_value) const
[4.768s]       |               [01;36m[K^~~~~[m[K
[4.768s] [01m[K/home/joannerizkallah/assignment3/build/dummy_node2/_deps/json-src/include/nlohmann/json.hpp:2315:15:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[4.768s] [01m[K/home/joannerizkallah/assignment3/src/dummy_node2/src/dummy_cpp_node.cpp:53:33:[m[K [01;36m[Knote: [m[K  candidate expects 2 arguments, 1 provided
[4.768s]    53 |         double d = [01;36m[Kcommand.value("distance")[m[K;
[4.768s]       |                    [01;36m[K~~~~~~~~~~~~~^~~~~~~~~~~~[m[K
[4.768s] In file included from [01m[K/home/joannerizkallah/assignment3/src/dummy_node2/src/dummy_cpp_node.cpp:8[m[K:
[4.768s] [01m[K/home/joannerizkallah/assignment3/build/dummy_node2/_deps/json-src/include/nlohmann/json.hpp:2340:16:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class ValueType, class ReturnType, typename std::enable_if<(nlohmann::json_abi_v3_11_2::detail::is_getable<nlohmann::json_abi_v3_11_2::basic_json<>, ReturnType>::value && (! std::is_same<nlohmann::json_abi_v3_11_2::detail::value_t, typename std::remove_cv<typename std::remove_reference<_Tp>::type>::type>::value)), int>::type <anonymous> > ReturnType nlohmann::json_abi_v3_11_2::basic_json<ObjectType, ArrayType, StringType, BooleanType, NumberIntegerType, NumberUnsignedType, NumberFloatType, AllocatorType, JSONSerializer, BinaryType>::value(const json_pointer&, ValueType&&) const [with ValueType = ValueType; ReturnType = ReturnType; typename std::enable_if<(nlohmann::json_abi_v3_11_2::detail::is_getable<nlohmann::json_abi_v3_11_2::basic_json<ObjectType, ArrayType, StringType, BooleanType, NumberIntegerType, NumberUnsignedType, NumberFloatType, AllocatorType, JSONSerializer, BinaryType>, ReturnType>::value && (! std::is_same<nlohmann::json_abi_v3_11_2::detail::value_t, typename std::remove_cv<typename std::remove_reference<_Tuple>::type>::type>::value)), int>::type <anonymous> = <anonymous>; ObjectType = std::map; ArrayType = std::vector; StringType = std::__cxx11::basic_string<char>; BooleanType = bool; NumberIntegerType = long int; NumberUnsignedType = long unsigned int; NumberFloatType = double; AllocatorType = std::allocator; JSONSerializer = nlohmann::json_abi_v3_11_2::adl_serializer; BinaryType = std::vector<unsigned char>][m[Kâ€™
[4.768s]  2340 |     ReturnType [01;36m[Kvalue[m[K(const json_pointer& ptr, ValueType && default_value) const
[4.768s]       |                [01;36m[K^~~~~[m[K
[4.768s] [01m[K/home/joannerizkallah/assignment3/build/dummy_node2/_deps/json-src/include/nlohmann/json.hpp:2340:16:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[4.768s] [01m[K/home/joannerizkallah/assignment3/src/dummy_node2/src/dummy_cpp_node.cpp:53:33:[m[K [01;36m[Knote: [m[K  candidate expects 2 arguments, 1 provided
[4.768s]    53 |         double d = [01;36m[Kcommand.value("distance")[m[K;
[4.768s]       |                    [01;36m[K~~~~~~~~~~~~~^~~~~~~~~~~~[m[K
[4.769s] In file included from [01m[K/home/joannerizkallah/assignment3/src/dummy_node2/src/dummy_cpp_node.cpp:8[m[K:
[4.769s] [01m[K/home/joannerizkallah/assignment3/build/dummy_node2/_deps/json-src/include/nlohmann/json.hpp:2364:15:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class ValueType, class BasicJsonType, typename std::enable_if<((nlohmann::json_abi_v3_11_2::detail::is_basic_json<T>::value && nlohmann::json_abi_v3_11_2::detail::is_getable<nlohmann::json_abi_v3_11_2::basic_json<>, ValueType>::value) && (! std::is_same<nlohmann::json_abi_v3_11_2::detail::value_t, typename std::remove_cv<typename std::remove_reference<_Tp>::type>::type>::value)), int>::type <anonymous> > ValueType nlohmann::json_abi_v3_11_2::basic_json<ObjectType, ArrayType, StringType, BooleanType, NumberIntegerType, NumberUnsignedType, NumberFloatType, AllocatorType, JSONSerializer, BinaryType>::value(const nlohmann::json_abi_v3_11_2::json_pointer<RefStringTypeRhs>&, const ValueType&) const [with ValueType = ValueType; BasicJsonType = BasicJsonType; typename std::enable_if<((nlohmann::json_abi_v3_11_2::detail::is_basic_json<U>::value && nlohmann::json_abi_v3_11_2::detail::is_getable<nlohmann::json_abi_v3_11_2::basic_json<ObjectType, ArrayType, StringType, BooleanType, NumberIntegerType, NumberUnsignedType, NumberFloatType, AllocatorType, JSONSerializer, BinaryType>, ValueType>::value) && (! std::is_same<nlohmann::json_abi_v3_11_2::detail::value_t, typename std::remove_cv<typename std::remove_reference<_Tuple>::type>::type>::value)), int>::type <anonymous> = <anonymous>; ObjectType = std::map; ArrayType = std::vector; StringType = std::__cxx11::basic_string<char>; BooleanType = bool; NumberIntegerType = long int; NumberUnsignedType = long unsigned int; NumberFloatType = double; AllocatorType = std::allocator; JSONSerializer = nlohmann::json_abi_v3_11_2::adl_serializer; BinaryType = std::vector<unsigned char>][m[Kâ€™
[4.769s]  2364 |     ValueType [01;36m[Kvalue[m[K(const ::nlohmann::json_pointer<BasicJsonType>& ptr, const ValueType& default_value) const
[4.769s]       |               [01;36m[K^~~~~[m[K
[4.769s] [01m[K/home/joannerizkallah/assignment3/build/dummy_node2/_deps/json-src/include/nlohmann/json.hpp:2364:15:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[4.769s] [01m[K/home/joannerizkallah/assignment3/src/dummy_node2/src/dummy_cpp_node.cpp:53:33:[m[K [01;36m[Knote: [m[K  mismatched types â€˜[01m[Kconst nlohmann::json_abi_v3_11_2::json_pointer<RefStringTypeRhs>[m[Kâ€™ and â€˜[01m[Kconst char [9][m[Kâ€™
[4.769s]    53 |         double d = [01;36m[Kcommand.value("distance")[m[K;
[4.769s]       |                    [01;36m[K~~~~~~~~~~~~~^~~~~~~~~~~~[m[K
[4.769s] In file included from [01m[K/home/joannerizkallah/assignment3/src/dummy_node2/src/dummy_cpp_node.cpp:8[m[K:
[4.769s] [01m[K/home/joannerizkallah/assignment3/build/dummy_node2/_deps/json-src/include/nlohmann/json.hpp:2375:16:[m[K [01;36m[Knote: [m[Kcandidate: â€˜[01m[Ktemplate<class ValueType, class BasicJsonType, class ReturnType, typename std::enable_if<((nlohmann::json_abi_v3_11_2::detail::is_basic_json<T>::value && nlohmann::json_abi_v3_11_2::detail::is_getable<nlohmann::json_abi_v3_11_2::basic_json<>, ReturnType>::value) && (! std::is_same<nlohmann::json_abi_v3_11_2::detail::value_t, typename std::remove_cv<typename std::remove_reference<_Tp>::type>::type>::value)), int>::type <anonymous> > ReturnType nlohmann::json_abi_v3_11_2::basic_json<ObjectType, ArrayType, StringType, BooleanType, NumberIntegerType, NumberUnsignedType, NumberFloatType, AllocatorType, JSONSerializer, BinaryType>::value(const nlohmann::json_abi_v3_11_2::json_pointer<RefStringTypeRhs>&, ValueType&&) const [with ValueType = ValueType; BasicJsonType = BasicJsonType; ReturnType = ReturnType; typename std::enable_if<((nlohmann::json_abi_v3_11_2::detail::is_basic_json<U>::value && nlohmann::json_abi_v3_11_2::detail::is_getable<nlohmann::json_abi_v3_11_2::basic_json<ObjectType, ArrayType, StringType, BooleanType, NumberIntegerType, NumberUnsignedType, NumberFloatType, AllocatorType, JSONSerializer, BinaryType>, ReturnType>::value) && (! std::is_same<nlohmann::json_abi_v3_11_2::detail::value_t, typename std::remove_cv<typename std::remove_reference<_Tuple>::type>::type>::value)), int>::type <anonymous> = <anonymous>; ObjectType = std::map; ArrayType = std::vector; StringType = std::__cxx11::basic_string<char>; BooleanType = bool; NumberIntegerType = long int; NumberUnsignedType = long unsigned int; NumberFloatType = double; AllocatorType = std::allocator; JSONSerializer = nlohmann::json_abi_v3_11_2::adl_serializer; BinaryType = std::vector<unsigned char>][m[Kâ€™
[4.769s]  2375 |     ReturnType [01;36m[Kvalue[m[K(const ::nlohmann::json_pointer<BasicJsonType>& ptr, ValueType && default_value) const
[4.769s]       |                [01;36m[K^~~~~[m[K
[4.769s] [01m[K/home/joannerizkallah/assignment3/build/dummy_node2/_deps/json-src/include/nlohmann/json.hpp:2375:16:[m[K [01;36m[Knote: [m[K  template argument deduction/substitution failed:
[4.769s] [01m[K/home/joannerizkallah/assignment3/src/dummy_node2/src/dummy_cpp_node.cpp:53:33:[m[K [01;36m[Knote: [m[K  mismatched types â€˜[01m[Kconst nlohmann::json_abi_v3_11_2::json_pointer<RefStringTypeRhs>[m[Kâ€™ and â€˜[01m[Kconst char [9][m[Kâ€™
[4.770s]    53 |         double d = [01;36m[Kcommand.value("distance")[m[K;
[4.770s]       |                    [01;36m[K~~~~~~~~~~~~~^~~~~~~~~~~~[m[K
[7.289s] gmake[2]: *** [CMakeFiles/action_client.dir/build.make:76: CMakeFiles/action_client.dir/src/dummy_cpp_node.cpp.o] Error 1
[7.290s] gmake[1]: *** [CMakeFiles/Makefile2:158: CMakeFiles/action_client.dir/all] Error 2
[7.292s] gmake: *** [Makefile:146: all] Error 2
[7.297s] Invoked command in '/home/joannerizkallah/assignment3/build/dummy_node2' returned '2': CMAKE_PREFIX_PATH=/home/joannerizkallah/assignment3/install/interfaces:/home/joannerizkallah/assignment3/install/dummy_node2:/home/joannerizkallah/assignment3/install/dummy_node1:/opt/ros/humble LD_LIBRARY_PATH=/home/joannerizkallah/assignment3/install/interfaces/lib:/home/joannerizkallah/assignment3/install/dummy_node2/lib:/home/joannerizkallah/assignment3/install/dummy_node1/lib:/opt/ros/humble/opt/rviz_ogre_vendor/lib:/opt/ros/humble/lib/x86_64-linux-gnu:/opt/ros/humble/lib /usr/bin/cmake --build /home/joannerizkallah/assignment3/build/dummy_node2 -- -j4 -l4
